GatedQ
app1.lr <- selBestModel("pTHg", data = pTHg_Gated,
flow = "Flow", dates = "Dates", conc.units="ng/L",
station="Cache Creek at Gated")
print(app1.lr)
pTHg_Gated_lr1 <- loadReg(pTHg ~ model(1), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr1
pTHg_Gated_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr2
pTHg_Gated_lr3 <- loadReg(pTHg ~ model(3), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr3
pTHg_Gated_lr4 <- loadReg(pTHg ~ model(4), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr4
pTHg_Gated_lr5 <- loadReg(pTHg ~ model(5), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr5
pTHg_Gated_lr6 <- loadReg(pTHg ~ model(6), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr6
pTHg_Gated_lr7 <- loadReg(pTHg ~ model(7), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr7
pTHg_Gated_lr8 <- loadReg(pTHg ~ model(8), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr8
pTHg_Gated_lr9 <- loadReg(pTHg ~ model(9), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr9
pTHg_Gated_lr1
pTHg_Gated_lr2
pTHg_Gated_lr3
pTHg_Gated_lr4
pTHg_Gated_lr5
pTHg_Gated_lr6
pTHg_Gated_lr7
pTHg_Gated_lr8
pTHg_Gated_lr9
pTHg_Gated <- importRDB("GatedOut_pTHg_2010-2015.txt")
pTHg_Gated <- importRDB("GatedOut_pTHg2010-2015.txt")
pTHg_Gated <- importRDB("GatedOut_pTHg_2010-2015.txt")
library(rloadest)
library(dataRetrieval)
library(ggplot2)
library(loadflex)
pTHg_Gated <- importRDB("GatedOut_pTHg_2010-2015.txt")
pTHg_Gated
### Reading in Flow Data
GatedQ <- importRDB("GatedOutflow_DQ_2010-2015.txt")
GatedQ$Dates <- with(GatedQ, as.POSIXct(paste(Dates), format= "%Y-%m-%d"))
GatedQ
app1.lr <- selBestModel("pTHg", data = pTHg_Gated,
flow = "Flow", dates = "Dates", conc.units="ng/L",
station="Cache Creek at Gated")
print(app1.lr)
pTHg_Gated_lr1 <- loadReg(pTHg ~ model(1), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr1
pTHg_Gated_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr2
pTHg_Gated_lr3 <- loadReg(pTHg ~ model(3), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr3
pTHg_Gated_lr4 <- loadReg(pTHg ~ model(4), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr4
pTHg_Gated_lr5 <- loadReg(pTHg ~ model(5), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr5
pTHg_Gated_lr6 <- loadReg(pTHg ~ model(6), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr6
pTHg_Gated_lr7 <- loadReg(pTHg ~ model(7), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr7
pTHg_Gated_lr8 <- loadReg(pTHg ~ model(8), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr8
pTHg_Gated_lr9 <- loadReg(pTHg ~ model(9), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr9
pTHg_Gated_lr1
pTHg_Gated_lr2
pTHg_Gated_lr3
pTHg_Gated_lr4
pTHg_Gated_lr5
pTHg_Gated_lr7
pTHg_Gated_lr8
pTHg_Gated_lr9
library(rloadest)
library(dataRetrieval)
library(ggplot2)
library(loadflex)
pTHg_Gated <- importRDB("GatedOut_pTHg.txt")
View(pTHg_Gated)
### Reading in Flow Data
GatedQ <- importRDB("GatedOutflow_DQ.txt")
GatedQ$Dates <- with(GatedQ, as.POSIXct(paste(Dates), format= "%Y-%m-%d"))
GatedQ
app1.lr <- selBestModel("pTHg", data = pTHg_Gated,
flow = "Flow", dates = "Dates", conc.units="ng/L",
station="Cache Creek at Gated")
print(app1.lr)
pTHg_Gated_lr1 <- loadReg(pTHg ~ model(1), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr1
pTHg_Gated_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr2
pTHg_Gated_lr3 <- loadReg(pTHg ~ model(3), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr3
pTHg_Gated_lr4 <- loadReg(pTHg ~ model(4), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr4
pTHg_Gated_lr5 <- loadReg(pTHg ~ model(5), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr5
pTHg_Gated_lr6 <- loadReg(pTHg ~ model(6), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr6
pTHg_Gated_lr7 <- loadReg(pTHg ~ model(7), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr7
pTHg_Gated_lr8 <- loadReg(pTHg ~ model(8), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr8
pTHg_Gated_lr9 <- loadReg(pTHg ~ model(9), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at Gated")
pTHg_Gated_lr9
pTHg_Gated_lr1
pTHg_Gated_lr2
pTHg_Gated_lr3
pTHg_Gated_lr4
pTHg_Gated_lr5
pTHg_Gated_lr7
pTHg_Gated_lr8
pTHg_Gated_lr9
pTHg_Gated_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_Gated,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L", load.units="kg",
station="Cache Creek at Gated")
setSweave("pTHg_Gated_lr2_plot2",5,5)
plot(pTHg_Gated_lr2,which=1,set.up=FALSE) #plot 1: Calibrated regression model
graphics.off()
setSweave("pTHg_Gated_lr2_plot1",5,5)
plot(pTHg_Gated_lr2,which=2,set.up=FALSE) #plot 2:Estimates of log load versus model residuals from AMLE regression
graphics.off()
setSweave("pTHg_Gated_lr2_plot3",5,5)
plot(pTHg_Gated_lr2,which=3,set.up=FALSE)# plot 3: Estimates of log load versus squared model residuals
graphics.off()
setSweave("pTHg_Gated_lr2_plot4",5,5)
plot(pTHg_Gated_lr2,which=4,set.up=FALSE) # plot 4: Standardized Serial Correlation
graphics.off()
setSweave("pTHg_Gated_lr2_plot5",5,5)
plot(pTHg_Gated_lr2,which=5,set.up=FALSE) # plot 5: Normal probability plot for the model residuals (Quantile plot)
graphics.off()
#############################################################################################
#predict concntrations
###############################################################################################
preds_conc_lr2 <- predConc(pTHg_Gated_lr2, GatedQ, by= "day", allow.incomplete= TRUE )
preds_conc_lr2
exportCSV(preds_conc_lr2, file.name = "Gated_pTHg_conc_lr2_2010-2019.cvs")
###############################################################################################
##We plot the estimated unite conc Vs the obsereved unite conc in xls
###############################################################################################
###############################################################################################
#load calculations will be done outside Loadest
#But this load calculated will be used to estimate SE for the xlxs calculation
###############################################################################################
preds_Flux_lr2day<-predLoad(pTHg_Gated_lr2,GatedQ,load.units="kg",by="day",allow.incomplete = TRUE,conf.int = 0.95,print = TRUE)
preds_Flux_lr2day
exportCSV(preds_Flux_lr2day, file.name = "Gated_pMeHgFlux_lr2_Day2010-2019.cvs")
preds_Flux_lr2WY<-predLoad(pTHg_Gated_lr2,GatedQ,load.units="kg",by="water year",allow.incomplete = TRUE,conf.int = 0.95,print = TRUE)
preds_Flux_lr2WY
exportCSV(preds_Flux_lr2WY, file.name = "Gated_pMeHgFlux_lr2_WY2010-2019.cvs")
pTHg_Gated_lr2
library(rloadest)
library(dataRetrieval)
library(ggplot2)
library(loadflex)
pTHg_GS <- importRDB("GatedSpillWay_pTHg.txt")
pTHg_GS
### Reading in Flow Data
GSQ <- importRDB("GatedSpillWay_DQ.txt")
GSQ$Dates <- with(GSQ, as.POSIXct(paste(Dates), format= "%Y-%m-%d"))
GSQ
app1.lr <- selBestModel("pTHg", data = pTHg_GS,
flow = "Flow", dates = "Dates", conc.units="ng/L",
station="Cache Creek at GS")
print(app1.lr)
View(GSQ)
View(pTHg_GS)
pTHg_GS <- importRDB("GatedSpillWay_pTHg.txt")
app1.lr <- selBestModel("pTHg", data = pTHg_GS,
flow = "Flow", dates = "Dates", conc.units="ng/L",
station="Cache Creek at GS")
print(app1.lr)
pTHg_GS_lr1 <- loadReg(pTHg ~ model(1), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr1
pTHg_GS_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr2
pTHg_GS_lr3 <- loadReg(pTHg ~ model(3), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr3
pTHg_GS_lr4 <- loadReg(pTHg ~ model(4), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr4
pTHg_GS_lr5 <- loadReg(pTHg ~ model(5), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr5
pTHg_GS_lr6 <- loadReg(pTHg ~ model(6), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr6
pTHg_GS_lr7 <- loadReg(pTHg ~ model(7), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr7
pTHg_GS_lr8 <- loadReg(pTHg ~ model(8), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr8
pTHg_GS_lr9 <- loadReg(pTHg ~ model(9), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr9
pTHg_GS_lr1
pTHg_GS_lr2
pTHg_GS_lr3
pTHg_GS_lr4
pTHg_GS_lr5
pTHg_GS_lr7
pTHg_GS_lr8
pTHg_GS_lr9
##############################################################################################
pTHg_GS_lr1 <- loadReg(pTHg ~ model(1), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L", load.units="kg",
station="Cache Creek at GS")
setSweave("pTHg_GS_lr1_plot2",5,5)
plot(pTHg_GS_lr1,which=1,set.up=FALSE) #plot 1: Calibrated regression model
graphics.off()
setSweave("pTHg_GS_lr1_plot1",5,5)
plot(pTHg_GS_lr1,which=2,set.up=FALSE) #plot 2:Estimates of log load versus model residuals from AMLE regression
graphics.off()
setSweave("pTHg_GS_lr1_plot3",5,5)
plot(pTHg_GS_lr1,which=3,set.up=FALSE)# plot 3: Estimates of log load versus squared model residuals
graphics.off()
setSweave("pTHg_GS_lr1_plot4",5,5)
plot(pTHg_GS_lr1,which=4,set.up=FALSE) # plot 4: Standardized Serial Correlation
graphics.off()
setSweave("pTHg_GS_lr1_plot5",5,5)
plot(pTHg_GS_lr1,which=5,set.up=FALSE) # plot 5: Normal probability plot for the model residuals (Quantile plot)
graphics.off()
#############################################################################################
#predict concntrations
###############################################################################################
preds_conc_lr1 <- predConc(pTHg_GS_lr1, GSQ, by= "day", allow.incomplete= TRUE )
preds_conc_lr1
exportCSV(preds_conc_lr1, file.name = "GS_pTHg_conc_lr1_2010-2019.cvs")
###############################################################################################
##We plot the estimated unite conc Vs the obsereved unite conc in xls
###############################################################################################
###############################################################################################
#load calculations will be done outside Loadest
#But this load calculated will be used to estimate SE for the xlxs calculation
###############################################################################################
preds_Flux_lr1day<-predLoad(pTHg_GS_lr1,GSQ,load.units="kg",by="day",allow.incomplete = TRUE,conf.int = 0.95,print = TRUE)
preds_Flux_lr1day
exportCSV(preds_Flux_lr1day, file.name = "GS_pMeHgFlux_lr1_Day2010-2019.cvs")
preds_Flux_lr1WY<-predLoad(pTHg_GS_lr1,GSQ,load.units="kg",by="water year",allow.incomplete = TRUE,conf.int = 0.95,print = TRUE)
preds_Flux_lr1WY
exportCSV(preds_Flux_lr1WY, file.name = "GS_pMeHgFlux_lr1_WY2010-2019.cvs")
library(rloadest)
library(dataRetrieval)
library(ggplot2)
library(loadflex)
##############################################################################################
#Importing DATA for Cache Creek at GS
##############################################################################################
# Interpolation data:GS pTHg data grab sample observations
pTHg_GS <- importRDB("GatedSpillWay_pTHg.txt")
pTHg_GS
### Reading in Flow Data
GSQ <- importRDB("GatedSpillWay_DQ.txt")
GSQ$Dates <- with(GSQ, as.POSIXct(paste(Dates), format= "%Y-%m-%d"))
GSQ
app1.lr <- selBestModel("pTHg", data = pTHg_GS,
flow = "Flow", dates = "Dates", conc.units="ng/L",
station="Cache Creek at GS")
print(app1.lr)
pTHg_GS_lr1 <- loadReg(pTHg ~ model(1), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr1
pTHg_GS_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr2
pTHg_GS_lr3 <- loadReg(pTHg ~ model(3), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr3
pTHg_GS_lr4 <- loadReg(pTHg ~ model(4), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr4
pTHg_GS_lr5 <- loadReg(pTHg ~ model(5), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr5
pTHg_GS_lr6 <- loadReg(pTHg ~ model(6), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr6
pTHg_GS_lr7 <- loadReg(pTHg ~ model(7), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr7
pTHg_GS_lr8 <- loadReg(pTHg ~ model(8), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr8
pTHg_GS_lr9 <- loadReg(pTHg ~ model(9), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr9
pTHg_GS_lr1
pTHg_GS_lr2
pTHg_GS_lr3
pTHg_GS_lr4
pTHg_GS_lr5
pTHg_GS_lr7
pTHg_GS_lr8
pTHg_GS_lr9
pTHg_GS_lr2
###############################################################################################
pTHg_GS_lr1 <- loadReg(pTHg ~ model(2), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr1
pTHg_GS_lr2 <- loadReg(pTHg ~ model(2), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr2
pTHg_GS_lr3 <- loadReg(pTHg ~ model(3), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr3
pTHg_GS_lr4 <- loadReg(pTHg ~ model(4), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr4
pTHg_GS_lr5 <- loadReg(pTHg ~ model(5), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr5
pTHg_GS_lr6 <- loadReg(pTHg ~ model(6), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr6
pTHg_GS_lr7 <- loadReg(pTHg ~ model(7), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr7
pTHg_GS_lr8 <- loadReg(pTHg ~ model(8), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr8
pTHg_GS_lr9 <- loadReg(pTHg ~ model(9), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L",load.units="kg",
station="Cache Creek at GS")
pTHg_GS_lr9
###############################################################################################
###############################################################################################
#Once we decide on the model we want to use we can run some diagnostic plots
#In order to look at some diagnostic plots that are only availble in  we need to run the model we
#selected (we feel best fitted) outside of the loadflex routine (by rinignloadReg only)
#the most usful plots are plot 1, plot 2, and plot 5
###############################################################################################
###############################################################################################
pTHg_GS_lr2 <- loadReg(pTHg ~ model(1), data=pTHg_GS,
flow="Flow", date="Dates", time.step="day",
flow.units="cfs", conc.units="ng/L", load.units="kg",
station="Cache Creek at GS")
setSweave("pTHg_GS_lr2_plot2",5,5)
plot(pTHg_GS_lr2,which=1,set.up=FALSE) #plot 1: Calibrated regression model
graphics.off()
setSweave("pTHg_GS_lr2_plot1",5,5)
plot(pTHg_GS_lr2,which=2,set.up=FALSE) #plot 2:Estimates of log load versus model residuals from AMLE regression
graphics.off()
setSweave("pTHg_GS_lr2_plot3",5,5)
plot(pTHg_GS_lr2,which=3,set.up=FALSE)# plot 3: Estimates of log load versus squared model residuals
graphics.off()
setSweave("pTHg_GS_lr2_plot4",5,5)
plot(pTHg_GS_lr2,which=4,set.up=FALSE) # plot 4: Standardized Serial Correlation
graphics.off()
setSweave("pTHg_GS_lr2_plot5",5,5)
plot(pTHg_GS_lr2,which=5,set.up=FALSE) # plot 5: Normal probability plot for the model residuals (Quantile plot)
graphics.off()
#############################################################################################
#predict concntrations
###############################################################################################
preds_conc_lr2 <- predConc(pTHg_GS_lr2, GSQ, by= "day", allow.incomplete= TRUE )
preds_conc_lr2
exportCSV(preds_conc_lr2, file.name = "GS_pTHg_conc_lr2_2010-2019.cvs")
###############################################################################################
##We plot the estimated unite conc Vs the obsereved unite conc in xls
###############################################################################################
###############################################################################################
#load calculations will be done outside Loadest
#But this load calculated will be used to estimate SE for the xlxs calculation
###############################################################################################
preds_Flux_lr2day<-predLoad(pTHg_GS_lr2,GSQ,load.units="kg",by="day",allow.incomplete = TRUE,conf.int = 0.95,print = TRUE)
preds_Flux_lr2day
exportCSV(preds_Flux_lr2day, file.name = "GS_pTHgFlux_lr2_Day2010-2019.cvs")
preds_Flux_lr2WY<-predLoad(pTHg_GS_lr2,GSQ,load.units="kg",by="water year",allow.incomplete = TRUE,conf.int = 0.95,print = TRUE)
preds_Flux_lr2WY
exportCSV(preds_Flux_lr2WY, file.name = "GS_pTHgFlux_lr2_WY2010-2019.cvs")
